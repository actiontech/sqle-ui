// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test useGenerateOrderStepInfo should return expect value with generateActionNode 1`] = `
<React.Fragment>
  modifySqlNode
</React.Fragment>
`;

exports[`test useGenerateOrderStepInfo should return expect value with generateActionNode 2`] = `"order.operator.wait"`;

exports[`test useGenerateOrderStepInfo should return expect value with generateActionNode 3`] = `
<Space
  wrap={true}
>
  <React.Fragment>
    sqlReviewNode
  </React.Fragment>
  <React.Fragment>
    rejectFullNode
  </React.Fragment>
</Space>
`;

exports[`test useGenerateOrderStepInfo should return expect value with generateActionNode 4`] = `
<Space
  wrap={true}
>
  <React.Fragment>
    sqlReviewNode
  </React.Fragment>
  <React.Fragment>
    rejectFullNode
  </React.Fragment>
</Space>
`;

exports[`test useGenerateOrderStepInfo should return expect value with generateActionNode 5`] = `
<span>
  order.operator.status
  ：
  <Space>
    <OrderStatusTag
      status="executing"
    />
    <EmptyBox
      if={true}
    >
      <React.Fragment>
        terminateNode
      </React.Fragment>
    </EmptyBox>
  </Space>
</span>
`;

exports[`test useGenerateOrderStepInfo should return expect value with generateActionNode 6`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="ant-space ant-space-horizontal ant-space-align-center"
        style="flex-wrap: wrap; margin-bottom: -8px;"
      >
        <div
          class="ant-space-item"
          style="margin-right: 8px; padding-bottom: 8px;"
        >
          batchSqlExecuteNode
        </div>
        <div
          class="ant-space-item"
          style="margin-right: 8px; padding-bottom: 8px;"
        >
          rejectFullNode
        </div>
        <div
          class="ant-space-item"
          style="padding-bottom: 8px;"
        >
          finishNode
        </div>
      </div>
      maintenanceTimeInfoNode
    </div>
  </body>,
  "container": <div>
    <div
      class="ant-space ant-space-horizontal ant-space-align-center"
      style="flex-wrap: wrap; margin-bottom: -8px;"
    >
      <div
        class="ant-space-item"
        style="margin-right: 8px; padding-bottom: 8px;"
      >
        batchSqlExecuteNode
      </div>
      <div
        class="ant-space-item"
        style="margin-right: 8px; padding-bottom: 8px;"
      >
        rejectFullNode
      </div>
      <div
        class="ant-space-item"
        style="padding-bottom: 8px;"
      >
        finishNode
      </div>
    </div>
    maintenanceTimeInfoNode
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`test useGenerateOrderStepInfo should return expect value with generateOperateInfo 1`] = `
<React.Fragment>
  <Col
    span={24}
  >
    order.operator.time
    ：
    2022-10-12 16:25:03
  </Col>
  <Col
    span={24}
  >
    order.operator.user
    ：
    admin
  </Col>
</React.Fragment>
`;

exports[`test useGenerateOrderStepInfo should return expect value with generateTimeLineIcon 1`] = `
<ForwardRef(ClockCircleOutlined)
  className="timeline-clock-icon"
/>
`;

exports[`test useGenerateOrderStepInfo should return expect value with generateTimeLineIcon 2`] = `
<ForwardRef(ClockCircleOutlined)
  className="timeline-clock-icon"
/>
`;
